elytron=The Elytron Subsystem
elytron.add=Operation adds the Elytron subsystem
elytron.remove=Operation removes the Elytron subsystem

elytron.security-property=A definition of a security property to be set.
# Operations
elytron.security-property.add=Add operation for adding a new security property.
elytron.security-property.remove=Remove operation for removing a security property.
# Attributes
elytron.security-property.value=The value to set the security property to.

elytron.provider-loader=A definition for a Provider loader.
# Operations
elytron.provider-loader.add=Add a new provider loader definition.
elytron.provider-loader.remove=Remove a provider loader definition.
# Configuration Attributes
elytron.provider-loader.register=Should the loaded providers be registered globally.
elytron.provider-loader.providers=The providers to be loaded by this resource.
elytron.provider-loader.providers.index=The index of the provider or property within the provider. Note: This is dynamically generated based on the current list contents.
elytron.provider-loader.providers.module=The name of the module to load the provider from.
elytron.provider-loader.providers.slot=The module slot to use when selecting the module to load the provider from.
elytron.provider-loader.providers.load-services=Should service loader discovery be used to load the providers.
elytron.provider-loader.providers.class-names=The fully qualified class names of the providers to load, these are loaded after the service-loader discovered providers and duplicates will be skipped.
elytron.provider-loader.providers.path=The path of the file to use to initialise the providers.
elytron.provider-loader.providers.relative-to=The base path of the configuration file.
elytron.provider-loader.providers.property-list=Configuration properties to be applied to the loaded provider. (Can not be set at the same time as path)
elytron.provider-loader.providers.key=The key for the property to be set.
elytron.provider-loader.providers.value=The value of the property to be set.
# Runtime Attributes
elytron.provider-loader.loaded-providers=The list of providers loaded by this provider loader.
elytron.provider-loader.loaded-providers.name=The name reported by the provider instance.
elytron.provider-loader.loaded-providers.info=The information reported by the provider instance.
elytron.provider-loader.loaded-providers.version=The version reported by the provider instance.
elytron.provider-loader.loaded-providers.services=List of services available from this provider.
elytron.provider-loader.loaded-providers.type=The service type.
elytron.provider-loader.loaded-providers.algorithm=The algorithm supported by the service.
elytron.provider-loader.loaded-providers.class-name=The class name of the implementation of the service SPI.

elytron.domain=A security domain definition.
elytron.domain.add=The add operation for a security domain definition.
elytron.domain.remove=The remove operation for a security domain definition.
elytron.domain.authenticate=A temporary operation to be used to test authentication.
elytron.domain.authenticate.username=The username to authenticate with.
elytron.domain.authenticate.password=The password for the given username.
elytron.domain.default_realm=The default realm contained by this security domain.
elytron.domain.realms=The list of realms contained by this security domain.

elytron.jaas-realm=A security realm definition backed by JAAS.
# Operations
elytron.jaas-realm.add=The add operation for the security realm.
elytron.jaas-realm.remove=The remove operation for the security realm.
# Attributes
elytron.jaas-realm.configuration=Reference to the JAAS configuration to back the realm, if omitted the value of the address is used instead.

elytron.keystore-realm=A security realm definition backed by a key store.
# Operations
elytron.keystore-realm.add=The add operation for the security realm.
elytron.keystore-realm.remove=The remove operation for the security realm.
# Attributes
elytron.keystore-realm.keystore=Reference to the KeyStore that should be used to back this security realm.

elytron.properties-realm=A security realm definition backed by properties files.
# Operations
elytron.properties-realm.add=The add operation for the security realm.
elytron.properties-realm.remove=The remove operation for the security realm.
# Attributes
elytron.properties-realm.users-properties=The properties file containing the users and their passwords.
elytron.properties-realm.users-properties.path=The path to the file containing the users and their passwords.
elytron.properties-realm.users-properties.relative-to=The pre-defined path the path is relative to.
elytron.properties-realm.groups-properties=The properties file containing the users and their groups.
elytron.properties-realm.groups-properties.path=The path to the file containing the users and their groups.
elytron.properties-realm.groups-properties.relative-to=The pre-defined path the path is relative to.
elytron.properties-realm.plain-text=Are the passwords store in plain text within the properties file?

elytron.keystore=A KeyStore definition.
# Operations
elytron.keystore.add=Add a new KeyStore definition.
elytron.keystore.remove=Remove the KeyStore definition.
elytron.keystore.load=Load the KeyStore, if the KeyStore is file backed this will involve re-reading the contents of the file.
elytron.keystore.store=Store the KeyStore to file, this operation will fail for any KeyStore instances not backed by a file.  If the file does not exist and it was not flagged as required it will be created.
# Configuration Attributes
elytron.keystore.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron.keystore.provider=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron.keystore.password=The password to use to load the KeyStore, this attribute will be replaced with the new vault solution.
elytron.keystore.password.deprecated=Obtaining the password will be moved to the new vault capabilities.
elytron.keystore.relative-to=The base path this store is relative to.
elytron.keystore.path=The path to the KeyStore file.
elytron.keystore.required=Is the file required to exist at the time the KeyStore service starts?
elytron.keystore.provider-loader=A reference to the provider-loader that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
# Runtime Attributes
elytron.keystore.state=The state of the underlying service that represents this KeyStore at runtime, if it is anything other than UP runtime operations will not be available.
elytron.keystore.synchronized=The time this KeyStore was last loaded or saved. Note: Some providers may continue to apply updates after the KeyStore was loaded within the application server.
elytron.keystore.modified=Indicates if the in-memory representation of the KeyStore has been changed since it was last loaded or stored.  Note: For some providers updates may be immediate without further load or store calls.
elytron.keystore.loaded-provider=Information about the provider that was used for this KeyStore.
elytron.keystore.loaded-provider.name=The name of the provider used to load the KeyStore.
elytron.keystore.loaded-provider.info=The information string about the provider used to load the KeyStore.
elytron.keystore.loaded-provider.version=The version of the provider used to load the KeyStore.
elytron.keystore.size=The number of entries in the KeyStore.

elytron.keystore.alias=An individual alias within the KeyStore.
elytron.keystore.alias.remove=Immediately remove the alias from the KeyStore, the success of this operation will be dependent on the underlying KeyStore provider supporting removals.
elytron.keystore.alias.creation-date=The creation date of the entry represented by this alias.
elytron.keystore.alias.entry-type=The type of the entry for this alias. Note: Unrecognised types will be reported as 'Other'.

elytron.keystore.alias.certificate=The certificate associated with the alias (Note: If the alias has a certificate chain this will always be undefined).
elytron.keystore.alias.certificate-chain=The certificate chain associated with the alias.

elytron.keystore.alias.certificate.type=The type of the certificate.
elytron.keystore.alias.certificate.public-key=The public key associated with the certificate.
elytron.keystore.alias.certificate.finger-prints=The finger prints for the certificate.
elytron.keystore.alias.certificate.algorithm=The algorithm of the public key or finger print.
elytron.keystore.alias.certificate.format=The format of the public key.
elytron.keystore.alias.certificate.encoded=The encoded value of the public key or certificate.
elytron.keystore.alias.certificate.value=The value of the finger print.
elytron.keystore.alias.certificate.subject=The subject from the certificate.
elytron.keystore.alias.certificate.issuer=The issuer of the certificate.
elytron.keystore.alias.certificate.not-after=The expiration date and time of the certificate.
elytron.keystore.alias.certificate.not-before=The starting date and time the certificate is valid.
elytron.keystore.alias.certificate.serial-number=The serial number of the certificate.
elytron.keystore.alias.certificate.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.keystore.alias.certificate.signature=The signature of the certificate.
elytron.keystore.alias.certificate.version=The certificate version.

elytron.keystore.alias.certificate-chain.type=The type of the certificate.
elytron.keystore.alias.certificate-chain.public-key=The public key associated with the certificate.
elytron.keystore.alias.certificate-chain.finger-prints=The finger prints for the certificate.
elytron.keystore.alias.certificate-chain.algorithm=The algorithm of the public key or finger print.
elytron.keystore.alias.certificate-chain.format=The format of the public key.
elytron.keystore.alias.certificate-chain.encoded=The encoded value of the public key or certificate.
elytron.keystore.alias.certificate-chain.value=The value of the finger print.
elytron.keystore.alias.certificate-chain.subject=The subject from the certificate.
elytron.keystore.alias.certificate-chain.issuer=The issuer of the certificate.
elytron.keystore.alias.certificate-chain.not-after=The expiration date and time of the certificate.
elytron.keystore.alias.certificate-chain.not-before=The starting date and time the certificate is valid.
elytron.keystore.alias.certificate-chain.serial-number=The serial number of the certificate.
elytron.keystore.alias.certificate-chain.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.keystore.alias.certificate-chain.signature=The signature of the certificate.
elytron.keystore.alias.certificate-chain.version=The certificate version.
