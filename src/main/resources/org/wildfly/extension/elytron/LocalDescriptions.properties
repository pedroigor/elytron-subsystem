elytron=The Elytron Subsystem
elytron.add=Operation adds the Elytron subsystem
elytron.remove=Operation removes the Elytron subsystem

#######################
# Security Properties #
#######################

elytron.security-property=A definition of a security property to be set.
# Operations
elytron.security-property.add=Add operation for adding a new security property.
elytron.security-property.remove=Remove operation for removing a security property.
# Attributes
elytron.security-property.value=The value to set the security property to.

####################
# Provider Loaders #
####################

elytron.provider-loader=A definition for a Provider loader.
# Operations
elytron.provider-loader.add=Add a new provider loader definition.
elytron.provider-loader.remove=Remove a provider loader definition.
# Configuration Attributes
elytron.provider-loader.register=Should the loaded providers be registered globally.
elytron.provider-loader.providers=The providers to be loaded by this resource.
elytron.provider-loader.providers.index=The index of the provider or property within the provider. Note: This is dynamically generated based on the current list contents.
elytron.provider-loader.providers.module=The name of the module to load the provider from.
elytron.provider-loader.providers.load-services=Should service loader discovery be used to load the providers.
elytron.provider-loader.providers.class-names=The fully qualified class names of the providers to load, these are loaded after the service-loader discovered providers and duplicates will be skipped.
elytron.provider-loader.providers.path=The path of the file to use to initialise the providers.
elytron.provider-loader.providers.relative-to=The base path of the configuration file.
elytron.provider-loader.providers.property-list=Configuration properties to be applied to the loaded provider. (Can not be set at the same time as path)
elytron.provider-loader.providers.key=The key for the property to be set.
elytron.provider-loader.providers.value=The value of the property to be set.
# Runtime Attributes
elytron.provider-loader.loaded-providers=The list of providers loaded by this provider loader.
elytron.provider-loader.loaded-providers.name=The name reported by the provider instance.
elytron.provider-loader.loaded-providers.info=The information reported by the provider instance.
elytron.provider-loader.loaded-providers.version=The version reported by the provider instance.
elytron.provider-loader.loaded-providers.services=List of services available from this provider.
elytron.provider-loader.loaded-providers.type=The service type.
elytron.provider-loader.loaded-providers.algorithm=The algorithm supported by the service.
elytron.provider-loader.loaded-providers.class-name=The class name of the implementation of the service SPI.

################################
# HTTP and SASL Authentication #
################################

elytron.http-server-authentication=Resource containing the association of a SecurityDomain with a HttpServerAuthenticationMechanismFactory.
# Operations
elytron.http-server-authentication.add=Add a new http-server-authentication resource.
elytron.http-server-authentication.remove=Remove the http-server-authentication resource.
# Attributes
elytron.http-server-authentication.security-domain=The SecurityDomain to associate with this resource
elytron.http-server-authentication.http-server-factory=The HttpServerAuthenticationMechanismFactory to associate with this resource
elytron.http-server-authentication.mechanism-configurations=Mechanism specific configuration
elytron.http-server-authentication.mechanism-configurations.mechanism-name=The name of the mechanism the configuration applies to
elytron.http-server-authentication.mechanism-configurations.host-name=The host name this configuration applies to.
elytron.http-server-authentication.mechanism-configurations.protocol=The protocol this configuration applies to.
elytron.http-server-authentication.mechanism-configurations.pre-realm-name-rewriter=A name rewriter to apply before the realm is selected
elytron.http-server-authentication.mechanism-configurations.post-realm-name-rewriter=A name rewriter to apply after the realm is selected
elytron.http-server-authentication.mechanism-configurations.final-name-rewriter=The final name rewriter
elytron.http-server-authentication.mechanism-configurations.realm-mapper=The realm mapper to be used by the mechanism
elytron.http-server-authentication.mechanism-configurations.credential-security-factory=The security factory to use to obtain a credential as required by the mechanism
elytron.http-server-authentication.mechanism-configurations.mechanism-realm-configurations=Definition of the realm names as understood by the mechanism
elytron.http-server-authentication.mechanism-configurations.realm-name=The name of the realm to be presented by the mechanism
# Runtime Attributes
elytron.http-server-authentication.available-mechanisms=The HTTP mechanisms available from this configuration after all filtering has been applied.

elytron.sasl-server-authentication=Resource containing the association of a SecurityDomain with a SaslServerFactory.
# Operations
elytron.sasl-server-authentication.add=Add a new sasl-server-authentication resource.
elytron.sasl-server-authentication.remove=Remove the sasl-server-authentication resource.
# Attributes
elytron.sasl-server-authentication.security-domain=The SecurityDomain to associate with this resource
elytron.sasl-server-authentication.sasl-server-factory=The SaslServerFactory to associate with this resource
elytron.sasl-server-authentication.mechanism-configurations=Mechanism specific configuration
elytron.sasl-server-authentication.mechanism-configurations.mechanism-name=The name of the mechanism the configuration applies to
elytron.sasl-server-authentication.mechanism-configurations.host-name=The host name this configuration applies to.
elytron.sasl-server-authentication.mechanism-configurations.protocol=The protocol this configuration applies to.
elytron.sasl-server-authentication.mechanism-configurations.pre-realm-name-rewriter=A name rewriter to apply before the realm is selected
elytron.sasl-server-authentication.mechanism-configurations.post-realm-name-rewriter=A name rewriter to apply after the realm is selected
elytron.sasl-server-authentication.mechanism-configurations.final-name-rewriter=The final name rewriter
elytron.sasl-server-authentication.mechanism-configurations.realm-mapper=The realm mapper to be used by the mechanism
elytron.sasl-server-authentication.mechanism-configurations.credential-security-factory=The security factory to use to obtain a credential as required by the mechanism
elytron.sasl-server-authentication.mechanism-configurations.mechanism-realm-configurations=Definition of the realm names as understood by the mechanism
elytron.sasl-server-authentication.mechanism-configurations.realm-name=The name of the realm to be presented by the mechanism

# Runtime Attributes
elytron.sasl-server-authentication.available-mechanisms=The SASL mechanisms available from this configuration after all filtering has been applied.


###################
# Security Domain #
###################

elytron.security-domain=A security domain definition.
elytron.security-domain.add=The add operation for a security domain definition.
elytron.security-domain.remove=The remove operation for a security domain definition.
elytron.security-domain.read-identity=Reads an identity from a security domain if it exists.
elytron.security-domain.read-identity.name=The name of the identity to read.
elytron.security-domain.authenticate=A temporary operation to be used to test authentication.
elytron.security-domain.authenticate.username=The username to authenticate with.
elytron.security-domain.authenticate.password=The password for the given username.
elytron.security-domain.pre-realm-name-rewriter=A reference to a NameRewriter to be applied before the realm is selected.
elytron.security-domain.post-realm-name-rewriter=A reference to a NameRewriter to be applied after the realm has operated on the supplied identity name.
elytron.security-domain.permission-mapper=A reference to a PermissionMapper to be used by this domain.
elytron.security-domain.principal-decoder=A reference to a PrincipalDecoder to be used by this domain.
elytron.security-domain.realm-mapper=Reference to the RealmMapper to be used by this domain.
elytron.security-domain.role-mapper=Reference to the RoleMapper to be used by this domain.
elytron.security-domain.default-realm=The default realm contained by this security domain.
elytron.security-domain.realms=The list of realms contained by this security domain.
elytron.security-domain.realms.realm=A reference to an individual security realm.
elytron.security-domain.realms.name-rewriter=A NameRewriter to be associated with the realm.
elytron.security-domain.realms.role-decoder=A RoleDecoder reference to be associated with the realm.
elytron.security-domain.realms.role-mapper=A RoleMapper reference to be associated with the realm.
elytron.security-domain.trusted-security-domains=The list of security domains that are trusted by this security domain.

#########################
# HTTP Server Factories #
#########################

elytron.aggregate-http-server-factory=A http server factory definition where the http server factory is an aggregation of other http server factories.
# Operations
elytron.aggregate-http-server-factory.add=The add operation for the http server factory.
elytron.aggregate-http-server-factory.remove=The remove operation for the http server factory.
# Attributes
elytron.aggregate-http-server-factory.http-server-factories=The referenced http server factories to aggregate.
# Runtime Attributes
elytron.aggregate-http-server-factory.available-mechanisms=The HTTP mechanisms available from this factory instance.

elytron.configurable-http-server-factory=A sasl server factory definition where the sasl server factory is an aggregation of other sasl server factories.
# Operations
elytron.configurable-http-server-factory.add=The add operation for the http server factory.
elytron.configurable-http-server-factory.remove=The remove operation for the http server factory.
# Attributes
elytron.configurable-http-server-factory.http-server-factory=The http server factory to be wrapped.
elytron.configurable-http-server-factory.properties=Custom properties to be passed in to the http server factory calls.
elytron.configurable-http-server-factory.filters=Filtering to be applied to enable / disable mechanisms based on the name.
elytron.configurable-http-server-factory.filters.pattern-filter=A regular expression pattern based filter.
elytron.configurable-http-server-factory.filters.enabling=Does this filter enable or disable a mechanism if it matches.

# Runtime Attributes
elytron.configurable-http-server-factory.available-mechanisms=The HTTP mechanisms available from this factory instance.

elytron.provider-http-server-factory=A http server factory definition where the http server factory is an aggregation of factories from the Provider[]
# Operations
elytron.provider-http-server-factory.add=The add operation for the http server factory.
elytron.provider-http-server-factory.remove=The remove operation for the http server factory.
# Attributes
elytron.provider-http-server-factory.provider-loader=The provider to use to locate the factories, if not specified the globally registered list of Providers will be used.
# Runtime Attributes
elytron.provider-http-server-factory.available-mechanisms=The HTTP mechanisms available from this factory instance.

elytron.service-loader-http-server-factory=A http server factory definition where the http server factory is an aggregation of factories identified using a ServiceLoader
# Operations
elytron.service-loader-http-server-factory.add=The add operation for the http server factory.
elytron.service-loader-http-server-factory.remove=The remove operation for the http server factory.
# Attributes
elytron.service-loader-http-server-factory.module=The module to use to obtain the classloader to load the factories, if not specified the classloader to load the resource will be used instead.
# Runtime Attributes
elytron.service-loader-http-server-factory.available-mechanisms=The HTTP mechanisms available from this factory instance.

######################
# Security Factories #
######################

elytron.custom-credential-security-factory=A custom credential SecurityFactory definition.
# Operations
elytron.custom-credential-security-factory.add=The add operation for the security factory.
elytron.custom-credential-security-factory.remove=The remove operation for the security factory.
# Attributes
elytron.custom-credential-security-factory.module=The module to use to load the custom security factory.
elytron.custom-credential-security-factory.class-name=The class name of the implementation of the custom security factory.
elytron.custom-credential-security-factory.configuration=The optional key/value configuration for the custom security factory.

elytron.kerberos-security-factory=A security factory for obtaining a GSSCredential for use during authentication.
# Operations
elytron.kerberos-security-factory.add=The add operation for the Kerberos SecurityFactory
elytron.kerberos-security-factory.remove=The remove operation for the Kerberos SecurityFactory
# Attributes
elytron.kerberos-security-factory.principal=The principal represented by the KeyTab
elytron.kerberos-security-factory.path=The path of the KeyTab to load to obtain the credential.
elytron.kerberos-security-factory.relative-to=The relative path to the KeyTab
elytron.kerberos-security-factory.minimum-remaining-lifetime=How much lifetime should a cached credential have remaining before it is recreated.
elytron.kerberos-security-factory.request-lifetime=How much lifetime should be requested for newly created credentials.
elytron.kerberos-security-factory.server=If this for use server side or client side?
elytron.kerberos-security-factory.debug=Should the JAAS step of obtaining the credential have debug logging enabled.
elytron.kerberos-security-factory.mechanism-oids=The mechanism OIDs the credential should be usable with.

##################
# Name Rewriters #
##################

elytron.aggregate-name-rewriter=A name rewriter definition where the name rewriter is an aggregation of other name rewriters.
# Operations
elytron.aggregate-name-rewriter.add=The add operation for the name rewriter.
elytron.aggregate-name-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.aggregate-name-rewriter.name-rewriters=The referenced name rewriters to aggregate.

elytron.chained-name-rewriter=A name rewriter definition where the name rewriter is a chaining of other name rewriters.
# Operations
elytron.chained-name-rewriter.add=The add operation for the name rewriter.
elytron.chained-name-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.chained-name-rewriter.name-rewriters=The referenced name rewriters to chain.

elytron.constant-name-rewriter=A name rewriter definition for a NameRewriter that always returns the same constant.
# Operations
elytron.constant-name-rewriter.add=The add operation for the name rewriter.
elytron.constant-name-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.constant-name-rewriter.constant=The constant value this NameRewriter will always return.

elytron.custom-name-rewriter=A custom name rewriter definition.
# Operations
elytron.custom-name-rewriter.add=The add operation for the name rewriter.
elytron.custom-name-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.custom-name-rewriter.module=The module to use to load the custom name rewriter.
elytron.custom-name-rewriter.class-name=The class name of the implementation of the custom name rewriter.
elytron.custom-name-rewriter.configuration=The optional key/value configuration for the custom name rewriter.

elytron.regex-name-rewriter=A regular expression based Name Rewriter
# Operations
elytron.regex-name-rewriter.add=The add operation for the name rewriter.
elytron.regex-name-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.regex-name-rewriter.pattern=The regular expression to use to locate the portion of the name to be replaced.
elytron.regex-name-rewriter.replacement=The value to be used as the replacement.
elytron.regex-name-rewriter.replace-all=Should all occurrences of the pattern matched be replaced or only the first occurrence.

elytron.regex-name-validating-rewriter=A regular expression based Name Rewriter which uses the regular expression to validate the name.
# Operations
elytron.regex-name-validating-rewriter.add=The add operation for the name rewriter.
elytron.regex-name-validating-rewriter.remove=The remove operation for the name rewriter.
# Attributes
elytron.regex-name-validating-rewriter.pattern=The regular expression to use to locate the portion of the name to be replaced.
elytron.regex-name-validating-rewriter.match=Should names that match the pattern be rejected or names that don't

######################
# Permission Mappers #
######################

elytron.custom-permission-mapper=Definition of a custom permission mapper.
# Operations
elytron.custom-permission-mapper.add=Add operation for the permission mapper
elytron.custom-permission-mapper.remove=Remove operation for the permission mapper
#Attributes
elytron.custom-permission-mapper.module=Name of the module to use to load the permission mapper
elytron.custom-permission-mapper.class-name=Fully qualified class name of the permission mapper
elytron.custom-permission-mapper.configuration=The optional kay/value configuration for the permission mapper

elytron.logical-permission-mapper=Definition of a logical permission mapper.
# Operations
elytron.logical-permission-mapper.add=Add operation for the permission mapper
elytron.logical-permission-mapper.remove=Remove operation for the permission mapper
#Attributes
elytron.logical-permission-mapper.logical-operation=The logical operation to use to combine the permission mappers.
elytron.logical-permission-mapper.left=Reference to the permission mapper to use to the left of the operation.
elytron.logical-permission-mapper.right=Reference to the permission mapper to use to the right of the operation.

elytron.simple-permission-mapper=Definition of a simple configured permission mapper.
# Operations
elytron.simple-permission-mapper.add=Add operation for the permission mapper
elytron.simple-permission-mapper.remove=Remove operation for the permission mapper
#Attributes
elytron.simple-permission-mapper.mapping-mode=The mapping mode that should be used in the event of multiple matches.
elytron.simple-permission-mapper.permission-mappings=The defined permission mappings.
elytron.simple-permission-mapper.permission-mappings.principals=Principals to compare when mapping permissions, if the identities principal matches any one in the list it is a match.
elytron.simple-permission-mapper.permission-mappings.roles=Roles to compare when mapping permissions, if the identity is a member of any one in the list it is a match.
elytron.simple-permission-mapper.permission-mappings.permissions=The permissions to assign in the event of a match.
elytron.simple-permission-mapper.permission-mappings.class-name=The fully qualified class name of the permission.
elytron.simple-permission-mapper.permission-mappings.module=The module to use to load the permission.
elytron.simple-permission-mapper.permission-mappings.target-name=The target name to pass to the permission as it is constructed.
elytron.simple-permission-mapper.permission-mappings.action=The action to pass to the permission as it is constructed.

######################
# Principal Decoders #
######################

elytron.aggregate-principal-decoder=A principal decoder definition where the principal decoder is an aggregation of other principal decoders.
# Operations
elytron.aggregate-principal-decoder.add=The add operation for the principal decoder.
elytron.aggregate-principal-decoder.remove=The remove operation for the principal decoder.
# Attributes
elytron.aggregate-principal-decoder.principal-decoders=The referenced principal decoders to aggregate.

elytron.concatenating-principal-decoder=A principal decoder definition where the principal decoder is a concatenation of other principal decoders.
# Operations
elytron.concatenating-principal-decoder.add=The add operation for the principal decoder.
elytron.concatenating-principal-decoder.remove=The remove operation for the principal decoder.
# Attributes
elytron.concatenating-principal-decoder.joiner=The string to use to join the results of the referenced principal decoders.
elytron.concatenating-principal-decoder.principal-decoders=The referenced principal decoders to concatenate.

elytron.constant-principal-decoder=Definition of a principal decoder that always returns the same constant.
# Operations
elytron.constant-principal-decoder.add=The add operation for the principal decoder.
elytron.constant-principal-decoder.remove=The remove operation for the principal decoder.
# Attributes
elytron.constant-principal-decoder.constant=The constant value the principal decoder will always return.

elytron.custom-principal-decoder=Definition of a custom principal decoder
# Operations
elytron.custom-principal-decoder.add=Add operation for the principal decoder
elytron.custom-principal-decoder.remove=Remove operation for the principal decoder
#Attributes
elytron.custom-principal-decoder.module=Name of the module to use to load the principal decoder
elytron.custom-principal-decoder.class-name=Fully qualified class name of the principal decoder
elytron.custom-principal-decoder.configuration=The optional kay/value configuration for the principal decoder

elytron.x500-attribute-principal-decoder=Definition of a X500 attribute based principal decoder
# Operations
elytron.x500-attribute-principal-decoder.add=Add operation for the principal decoder
elytron.x500-attribute-principal-decoder.remove=Remove operation for the principal decoder
#Attributes
elytron.x500-attribute-principal-decoder.oid=The OID of the attribute to map
elytron.x500-attribute-principal-decoder.joiner=The joining string
elytron.x500-attribute-principal-decoder.start-segment=The 0-based starting occurrence of the attribute to map
elytron.x500-attribute-principal-decoder.maximum-segments=The maximum number of occurrences of the attribute to map
elytron.x500-attribute-principal-decoder.reverse=When set to 'true', the attribute values will be processed and returned in reverse order
elytron.x500-attribute-principal-decoder.required-oids=The OIDs of the attributes that must be present in the principal

#################
# Realm Mappers #
#################

elytron.custom-realm-mapper=Definition of a custom RealmMapper
# Operations
elytron.custom-realm-mapper.add=Add operation for the RealmMapper
elytron.custom-realm-mapper.remove=Remove operation for the RealmMapper
#Attributes
elytron.custom-realm-mapper.module=Name of the module to use to load the RealmMapper
elytron.custom-realm-mapper.class-name=Fully qualified class name of the RealmMapper
elytron.custom-realm-mapper.configuration=The optional kay/value configuration for the RealmMapper

elytron.simple-regex-realm-mapper=Definition of a custom RealmMapper
# Operations
elytron.simple-regex-realm-mapper.add=Add operation for the RealmMapper
elytron.simple-regex-realm-mapper.remove=Remove operation for the RealmMapper
#Attributes
elytron.simple-regex-realm-mapper.pattern=The regular expression which must contain at least one capture group to extract the realm from the name.
elytron.simple-regex-realm-mapper.delegate-realm-mapper=The RealmMapper to delegate to if there is no match using the pattern.

elytron.mapped-regex-realm-mapper=Definition of a custom RealmMapper
# Operations
elytron.mapped-regex-realm-mapper.add=Add operation for the RealmMapper
elytron.mapped-regex-realm-mapper.remove=Remove operation for the RealmMapper
#Attributes
elytron.mapped-regex-realm-mapper.pattern=The regular expression which must contain at least one capture group to extract the realm from the name.
elytron.mapped-regex-realm-mapper.delegate-realm-mapper=The RealmMapper to delegate to if there is no match using the pattern.
elytron.mapped-regex-realm-mapper.realm-map=Mapping of realm name extracted using the regular expression to a defined realm name.

#################
# Role Decoders #
#################

elytron.custom-role-decoder=Definition of a custom RoleDecoder
# Operations
elytron.custom-role-decoder.add=Add operation for the RoleDecoder
elytron.custom-role-decoder.remove=Remove operation for the RoleDecoder
#Attributes
elytron.custom-role-decoder.module=Name of the module to use to load the RoleDecoder
elytron.custom-role-decoder.class-name=Fully qualified class name of the RoleDecoder
elytron.custom-role-decoder.configuration=The optional kay/value configuration for the RoleDecoder

elytron.empty-role-decoder=Definition of an empty RoleDecoder that never returns any roles.
# Operations
elytron.empty-role-decoder.add=Add operation for the RoleDecoder
elytron.empty-role-decoder.remove=Remove operation for the RoleDecoder

elytron.simple-role-decoder=Definition of a simple RoleDecoder that takes a single attribute and maps it directly to roles.
# Operations
elytron.simple-role-decoder.add=Add operation for the RoleDecoder
elytron.simple-role-decoder.remove=Remove operation for the RoleDecoder
# Attributes
elytron.simple-role-decoder.attribute=The name of the attribute from the identity to map directly to roles.

################
# Role Mappers #
################

elytron.add-prefix-role-mapper=A role mapper definition for a role mapper that adds a prefix to each provided.
# Operations
elytron.add-prefix-role-mapper.add=The add operation for the role mapper.
elytron.add-prefix-role-mapper.remove=The remove operation for the role mapper.
# Attributes
elytron.add-prefix-role-mapper.prefix=The prefix to add to each role.

elytron.add-suffix-role-mapper=A role mapper definition for a role mapper that adds a suffix to each provided.
# Operations
elytron.add-suffix-role-mapper.add=The add operation for the role mapper.
elytron.add-suffix-role-mapper.remove=The remove operation for the role mapper.
# Attributes
elytron.add-suffix-role-mapper.suffix=The suffix to add to each role.

elytron.aggregate-role-mapper=A role mapper definition where the role mapper is an aggregation of other role mappers.
# Operations
elytron.aggregate-role-mapper.add=The add operation for the role mapper.
elytron.aggregate-role-mapper.remove=The remove operation for the role mapper.
# Attributes
elytron.aggregate-role-mapper.role-mappers=The referenced role mappers to aggregate.

elytron.constant-role-mapper=A role mapper definition where a constant set of roles is always returned.
# Operations
elytron.constant-role-mapper.add=The add operation for the role mapper.
elytron.constant-role-mapper.remove=The remove operation for the role mapper.
# Attributes
elytron.constant-role-mapper.roles=The constant roles to be returned by this role mapper.

elytron.custom-role-mapper=Definition of a custom RoleMapper
# Operations
elytron.custom-role-mapper.add=Add operation for the RoleMapper
elytron.custom-role-mapper.remove=Remove operation for the RoleMapper
#Attributes
elytron.custom-role-mapper.module=Name of the module to use to load the RoleMapper
elytron.custom-role-mapper.class-name=Fully qualified class name of the RoleMapper
elytron.custom-role-mapper.configuration=The optional kay/value configuration for the RoleMapper

elytron.logical-role-mapper=A role mapper definition where a constant set of roles is always returned.
# Operations
elytron.logical-role-mapper.add=The add operation for the role mapper.
elytron.logical-role-mapper.remove=The remove operation for the role mapper.
# Attributes
elytron.logical-role-mapper.logical-operation=The logical operation to be performed on the role mapper mappings.
elytron.logical-role-mapper.left=Reference to a role mapper to be used on the left side of the operation.
elytron.logical-role-mapper.right=Reference to a role mapper to be used on the right side of the operation.

#####################
# Realm Definitions #
#####################

elytron.aggregate-realm=A realm definition that is an aggregation of two realms, one for the authentication steps and one for loading the identity for the authorization steps.
# Operations
elytron.aggregate-realm.add=The add operation for the security realm.
elytron.aggregate-realm.remove=The remove operation for the security realm.
# Attributes
elytron.aggregate-realm.authentication-realm=Reference to the security realm to use for authentication.
elytron.aggregate-realm.authorization-realm=Reference to the security realm to use for loading the identity for authorization.

elytron.custom-modifiable-realm=A custom security realm definition.
# Operations
elytron.custom-modifiable-realm.add=The add operation for the security realm.
elytron.custom-modifiable-realm.remove=The remove operation for the security realm.
# Attributes
elytron.custom-modifiable-realm.module=The module to use to load the custom realm.
elytron.custom-modifiable-realm.class-name=The class name of the implementation of the custom realm.
elytron.custom-modifiable-realm.configuration=The optional key/value configuration for the custom realm.
elytron.custom-modifiable-realm.identity=An identity which can be managed by a security realm.

elytron.custom-realm=A custom security realm definition.
# Operations
elytron.custom-realm.add=The add operation for the security realm.
elytron.custom-realm.remove=The remove operation for the security realm.
# Attributes
elytron.custom-realm.module=The module to use to load the custom realm.
elytron.custom-realm.class-name=The class name of the implementation of the custom realm.
elytron.custom-realm.configuration=The optional key/value configuration for the custom realm.


elytron.jdbc-realm=A security realm definition backed by database using JDBC.
# Operations
elytron.jdbc-realm.add=The add operation for the security realm.
elytron.jdbc-realm.remove=The remove operation for the security realm.

# Authentication Query Complex Attribute
elytron.jdbc-realm.principal-query=The authentication query used to authenticate users based on specific key types.
elytron.jdbc-realm.principal-query.sql=The SQL statement used to obtain the keys(as table columns) for a specific user and map them accordingly with their type.
elytron.jdbc-realm.principal-query.data-source=The name of the datasource used to connect to the database.
elytron.jdbc-realm.principal-query.algorithm=The algorithm for a specific password key mapper.
elytron.jdbc-realm.principal-query.password-index=The column index from an authentication query that represents the user's password.
elytron.jdbc-realm.principal-query.salt-index=The column index from an authentication query that represents the password's salt, if supported.
elytron.jdbc-realm.principal-query.iteration-count-index=The column index from an authentication query that represents the password's iteration count, if supported.
# Password Mapper Complex Attributes
elytron.jdbc-realm.principal-query.clear-password-mapper=A key mapper that maps a column returned from a SQL query to a Clear Password key type.
elytron.jdbc-realm.principal-query.bcrypt-mapper=A key mapper that maps a column returned from a SQL query to a Bcrypt key type.
elytron.jdbc-realm.principal-query.salted-simple-digest-mapper=A key mapper that maps a column returned from a SQL query to a Salted Simple Digest key type.
elytron.jdbc-realm.principal-query.simple-digest-mapper=A key mapper that maps a column returned from a SQL query to a Simple Digest key type.
elytron.jdbc-realm.principal-query.scram-mapper=A key mapper that maps a column returned from a SQL query to a Scram key type.
# Attribute Mapping Attributes
elytron.jdbc-realm.principal-query.attribute-mapping=The attribute mappings defined for this resource.
elytron.jdbc-realm.principal-query.index=The column index from a query that representing the mapped attribute.
elytron.jdbc-realm.principal-query.to=The name of the identity attribute mapped from a column returned from a SQL query.

elytron.key-store-realm=A security realm definition backed by a key store.
# Operations
elytron.key-store-realm.add=The add operation for the security realm.
elytron.key-store-realm.remove=The remove operation for the security realm.
# Attributes
elytron.key-store-realm.key-store=Reference to the KeyStore that should be used to back this security realm.

elytron.properties-realm=A security realm definition backed by properties files.
# Operations
elytron.properties-realm.add=The add operation for the security realm.
elytron.properties-realm.remove=The remove operation for the security realm.
elytron.properties-realm.load=Reload the properties files from the file system.
# Attributes
elytron.properties-realm.users-properties=The properties file containing the users and their passwords.
elytron.properties-realm.users-properties.path=The path to the file containing the users and their passwords.
elytron.properties-realm.users-properties.relative-to=The pre-defined path the path is relative to.
elytron.properties-realm.groups-properties=The properties file containing the users and their groups.
elytron.properties-realm.groups-properties.path=The path to the file containing the users and their groups.
elytron.properties-realm.groups-properties.relative-to=The pre-defined path the path is relative to.
elytron.properties-realm.plain-text=Are the passwords store in plain text within the properties file?
elytron.properties-realm.groups-attribute=The name of the attribute in the returned AuthorizationIdentity that should contain the group membership information for the identity.
# Runtime Attributes
elytron.properties-realm.synchronized=The time the properties files that back this realm were last loaded.

elytron.ldap-realm=A security realm definition backed by LDAP.
# Operations
elytron.ldap-realm.add=The add operation for the security realm.
elytron.ldap-realm.remove=The remove operation for the security realm.
# Attributes
elytron.ldap-realm.dir-context=The configuration to connect to a LDAP server.
elytron.ldap-realm.dir-context.url=The connection url.
elytron.ldap-realm.dir-context.authentication-level=The authentication level.
elytron.ldap-realm.dir-context.principal=The principal to authenticate and connect to the LDAP server.
elytron.ldap-realm.dir-context.credential=The credential to authenticate and connect to the LDAP server.
elytron.ldap-realm.dir-context.enable-connection-pooling=Indicates if connection pooling is enabled.
elytron.ldap-realm.identity-mapping=The configuration options that define how principals are mapped to their corresponding entries in the underlying LDAP server.
elytron.ldap-realm.identity-mapping.rdn-identifier=The RDN part of the principal's DN to be used to obtain the principal's name from an LDAP entry.
elytron.ldap-realm.identity-mapping.search-base-dn=The base DN to be used when executing queries
elytron.ldap-realm.identity-mapping.use-recursive-search=Indicates if queries are recursive.
elytron.ldap-realm.identity-mapping.attribute-mapping=The attribute mappings defined for this resource.
elytron.ldap-realm.identity-mapping.attribute-mapping.attribute=The configuration used to map a specific LDAP attribute as an identity attribute.
elytron.ldap-realm.identity-mapping.from=The name of the LDAP attribute to map to an identity attribute.
elytron.ldap-realm.identity-mapping.to=The name of the identity attribute mapped from a specific LDAP attribute.
elytron.ldap-realm.identity-mapping.filter=The filter to use to obtain the values for a specific attribute.
elytron.ldap-realm.identity-mapping.filter-base-dn=The name of the context where the filter should be performed.
elytron.ldap-realm.identity-mapping.as-rdn=The RDN key to use as the value for an attribute, in case the value in its raw form is in X.500 format.
elytron.ldap-realm.direct-verification=Does this realm support verification of credentials by directly connecting to LDAP as the account being authenticated?
elytron.ldap-realm.identity=An identity which can be managed by a security realm.

elytron.filesystem-realm=A simple security realm definition backed by the filesystem.
elytron.filesystem-realm.add=The add operation for the security realm.
elytron.filesystem-realm.remove=The remove operation for the security realm.
elytron.filesystem-realm.path=The path to the file containing the realm.
elytron.filesystem-realm.relative-to=The pre-defined path the path is relative to.
elytron.filesystem-realm.name-rewriter=The name of the NameRewriter to use.
elytron.filesystem-realm.levels=The number of levels of directory hashing to apply.
elytron.filesystem-realm.identity=An identity which can be managed by a security realm.

elytron.token-realm=A security realm definition capable of validating and extracting identities from security tokens.
# Operations
elytron.token-realm.add=The add operation for the security realm.
elytron.token-realm.remove=The remove operation for the security realm.

elytron.token-realm.principal-claim=The authentication query used to authenticate users based on specific key types.

# JWT Validator Complex Attribute
elytron.token-realm.jwt=The authentication query used to authenticate users based on specific key types.
elytron.token-realm.jwt.issuer=The SQL statement used to obtain the keys(as table columns) for a specific user and map them accordingly with their type.
elytron.token-realm.jwt.audience=The name of the datasource used to connect to the database.
elytron.token-realm.jwt.public-key=The algorithm for a specific password key mapper.

# Identity management descriptions
elytron.modifiable-security-realm.identity=An identity which can be managed by a security realm.
elytron.modifiable-security-realm.identity.add=Add an identity from a security realm.
elytron.modifiable-security-realm.identity.remove=Removes an identity from a security realm.
elytron.modifiable-security-realm.identity.read-identity=Reads an identity from a security domain if it exists.
elytron.modifiable-security-realm.identity.add-attribute=Add an attribute to an existing identity.
elytron.modifiable-security-realm.identity.add-attribute.name=The name of the attribute.
elytron.modifiable-security-realm.identity.add-attribute.value=The value of the attribute.
elytron.modifiable-security-realm.identity.remove-attribute=Remove an attribute to an existing identity.
elytron.modifiable-security-realm.identity.remove-attribute.name=The name of the attribute.
elytron.modifiable-security-realm.identity.remove-attribute.value=The value of the attribute.
elytron.modifiable-security-realm.identity.set-password=Add a password to an existing identity.
elytron.modifiable-security-realm.identity.set-password.bcrypt=A password using the Bcrypt algorithm.
elytron.modifiable-security-realm.identity.set-password.bcrypt.iteration-count=The iteration count or cost to apply to the password.
elytron.modifiable-security-realm.identity.set-password.bcrypt.salt=The salt to apply to the password.
elytron.modifiable-security-realm.identity.set-password.bcrypt.password=The actual password to set.
elytron.modifiable-security-realm.identity.bcrypt=A password using the Bcrypt algorithm.
elytron.modifiable-security-realm.identity.bcrypt.name=The credential name.
elytron.modifiable-security-realm.identity.bcrypt.iteration-count=The iteration count or cost to apply to the password.
elytron.modifiable-security-realm.identity.bcrypt.salt=The salt to apply to the password.
elytron.modifiable-security-realm.identity.bcrypt.password=The actual password to set.
elytron.modifiable-security-realm.identity.set-password.clear=A password in clear text.
elytron.modifiable-security-realm.identity.set-password.clear.password=The actual password to set.
elytron.modifiable-security-realm.identity.clear=A password in clear text.
elytron.modifiable-security-realm.identity.clear.name=The credential name.
elytron.modifiable-security-realm.identity.clear.password=The actual password to set.
elytron.modifiable-security-realm.identity.set-password.simple-digest=A simple digest password.
elytron.modifiable-security-realm.identity.set-password.simple-digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.set-password.simple-digest.password=The actual password to set.
elytron.modifiable-security-realm.identity.simple-digest=A password in clear text.
elytron.modifiable-security-realm.identity.simple-digest.name=The credential name.
elytron.modifiable-security-realm.identity.simple-digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.simple-digest.password=The actual password to set.
elytron.modifiable-security-realm.identity.set-password.salted-simple-digest=A password using a salted digest.
elytron.modifiable-security-realm.identity.salted-simple-digest.name=The credential name.
elytron.modifiable-security-realm.identity.set-password.salted-simple-digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.set-password.salted-simple-digest.salt=The salt to apply to the password.
elytron.modifiable-security-realm.identity.set-password.salted-simple-digest.password=The actual password to set.
elytron.modifiable-security-realm.identity.salted-simple-digest=A password using a salted digest.
elytron.modifiable-security-realm.identity.salted-simple-digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.salted-simple-digest.salt=The salt to apply to the password.
elytron.modifiable-security-realm.identity.salted-simple-digest.password=The actual password to set.
elytron.modifiable-security-realm.identity.set-password.digest=A password using a salted digest.
elytron.modifiable-security-realm.identity.set-password.digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.set-password.digest.realm=The realm.
elytron.modifiable-security-realm.identity.set-password.digest.password=The actual password to set.
elytron.modifiable-security-realm.identity.digest=A password using a salted digest.
elytron.modifiable-security-realm.identity.digest.name=The credential name.
elytron.modifiable-security-realm.identity.digest.algorithm=The algorithm used to encrypt the password.
elytron.modifiable-security-realm.identity.digest.realm=The realm.
elytron.modifiable-security-realm.identity.digest.password=The actual password to set.

#########################
# SASL Server Factories #
#########################

elytron.aggregate-sasl-server-factory=A sasl server factory definition where the sasl server factory is an aggregation of other sasl server factories.
# Operations
elytron.aggregate-sasl-server-factory.add=The add operation for the sasl server factory.
elytron.aggregate-sasl-server-factory.remove=The remove operation for the sasl server factory.
# Attributes
elytron.aggregate-sasl-server-factory.sasl-server-factories=The referenced sasl server factories to aggregate.
# Runtime Attributes
elytron.aggregate-sasl-server-factory.available-mechanisms=The SASL mechanisms available from this factory after all filtering has been applied.

elytron.configurable-sasl-server-factory=A sasl server factory definition where the sasl server factory is an aggregation of other sasl server factories.
# Operations
elytron.configurable-sasl-server-factory.add=The add operation for the sasl server factory.
elytron.configurable-sasl-server-factory.remove=The remove operation for the sasl server factory.
# Attributes
elytron.configurable-sasl-server-factory.sasl-server-factory=The sasl server factory to be wrapped.
elytron.configurable-sasl-server-factory.protocol=The protocol that should be passed into factory when creating the mechanism.
elytron.configurable-sasl-server-factory.server-name=The server name that should be passed into factory when creating the mechanism.
elytron.configurable-sasl-server-factory.properties=Custom properties to be passed in to the sasl server factory calls.
elytron.configurable-sasl-server-factory.filters=List of filters to be evaluated sequentially combining the results using 'or'.
elytron.configurable-sasl-server-factory.filters.predefined-filter=A predefined filter to use to filter the mechanism name.
elytron.configurable-sasl-server-factory.filters.pattern-filter=A regular expression based filter of the mechanism name.
elytron.configurable-sasl-server-factory.filters.enabling=Is this filter enabling or disabling the matched names.
# Runtime Attributes
elytron.configurable-sasl-server-factory.available-mechanisms=The SASL mechanisms available from this factory after all filtering has been applied.

elytron.mechanism-provider-filtering-sasl-server-factory=A sasl server factory definition that enables filtering by provider where the factory was loaded using a provider.
# Operations
elytron.mechanism-provider-filtering-sasl-server-factory.add=The add operation for the sasl server factory.
elytron.mechanism-provider-filtering-sasl-server-factory.remove=The remove operation for the sasl server factory.
# Attributes
elytron.mechanism-provider-filtering-sasl-server-factory.sasl-server-factory=Reference to a sasl server factory to be wrapped by this definition.
elytron.mechanism-provider-filtering-sasl-server-factory.enabling=When set to 'true' no provider loaded mechanisms are enabled unless matched by one of the filters, setting to 'false' has the inverse effect.
elytron.mechanism-provider-filtering-sasl-server-factory.filters=The filters to apply when comparing the mechanisms from the providers, a filter matches when all of the specified values match the mechanism / provider pair.
elytron.mechanism-provider-filtering-sasl-server-factory.filters.mechanism-name=The name of the sasl mechanism this filter matches with.
elytron.mechanism-provider-filtering-sasl-server-factory.filters.provider-name=The name of the provider this filter matches.
elytron.mechanism-provider-filtering-sasl-server-factory.filters.provider-version=Version to use when comparing the Provider's version.
elytron.mechanism-provider-filtering-sasl-server-factory.filters.version-comparison=The equality to use when evaluating the Provider's version.
# Runtime Attributes
elytron.mechanism-provider-filtering-sasl-server-factory.available-mechanisms=The SASL mechanisms available from this factory after all filtering has been applied.

elytron.provider-sasl-server-factory=A sasl server factory definition where the sasl server factory is an aggregation of factories from the Provider[]
# Operations
elytron.provider-sasl-server-factory.add=The add operation for the sasl server factory.
elytron.provider-sasl-server-factory.remove=The remove operation for the sasl server factory.
# Attributes
elytron.provider-sasl-server-factory.provider-loader=The provider to use to locate the factories, if not specified the globally registered list of Providers will be used.
# Runtime Attributes
elytron.provider-sasl-server-factory.available-mechanisms=The SASL mechanisms available from this factory after all filtering has been applied.

elytron.service-loader-sasl-server-factory=A sasl server factory definition where the sasl server factory is an aggregation of factories identified using a ServiceLoader
# Operations
elytron.service-loader-sasl-server-factory.add=The add operation for the sasl server factory.
elytron.service-loader-sasl-server-factory.remove=The remove operation for the sasl server factory.
# Attributes
elytron.service-loader-sasl-server-factory.module=The module to use to obtain the classloader to load the factories, if not specified the classloader to load the resource will be used instead.
# Runtime Attributes
elytron.service-loader-sasl-server-factory.available-mechanisms=The SASL mechanisms available from this factory after all filtering has been applied.


##################
# TLS / KeyStore #
##################

elytron.key-store=A KeyStore definition.
# Operations
elytron.key-store.add=Add a new KeyStore definition.
elytron.key-store.remove=Remove the KeyStore definition.
elytron.key-store.load=Load the KeyStore, if the KeyStore is file backed this will involve re-reading the contents of the file.
elytron.key-store.store=Store the KeyStore to file, this operation will fail for any KeyStore instances not backed by a file.  If the file does not exist and it was not flagged as required it will be created.
# Configuration Attributes
elytron.key-store.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron.key-store.provider=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron.key-store.password=The password to use to load the KeyStore, this attribute will be replaced with the new vault solution.
elytron.key-store.password.deprecated=Obtaining the password will be moved to the new vault capabilities.
elytron.key-store.relative-to=The base path this store is relative to.
elytron.key-store.path=The path to the KeyStore file.
elytron.key-store.required=Is the file required to exist at the time the KeyStore service starts?
elytron.key-store.provider-loader=A reference to the provider-loader that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
elytron.key-store.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
# Runtime Attributes
elytron.key-store.state=The state of the underlying service that represents this KeyStore at runtime, if it is anything other than UP runtime operations will not be available.
elytron.key-store.synchronized=The time this KeyStore was last loaded or saved. Note: Some providers may continue to apply updates after the KeyStore was loaded within the application server.
elytron.key-store.modified=Indicates if the in-memory representation of the KeyStore has been changed since it was last loaded or stored.  Note: For some providers updates may be immediate without further load or store calls.
elytron.key-store.loaded-provider=Information about the provider that was used for this KeyStore.
elytron.key-store.loaded-provider.name=The name of the provider used to load the KeyStore.
elytron.key-store.loaded-provider.info=The information string about the provider used to load the KeyStore.
elytron.key-store.loaded-provider.version=The version of the provider used to load the KeyStore.
elytron.key-store.size=The number of entries in the KeyStore.

elytron.key-store.alias=An individual alias within the KeyStore.
elytron.key-store.alias.remove=Immediately remove the alias from the KeyStore, the success of this operation will be dependent on the underlying KeyStore provider supporting removals.
elytron.key-store.alias.creation-date=The creation date of the entry represented by this alias.
elytron.key-store.alias.entry-type=The type of the entry for this alias. Note: Unrecognised types will be reported as 'Other'.

elytron.key-store.alias.certificate=The certificate associated with the alias (Note: If the alias has a certificate chain this will always be undefined).
elytron.key-store.alias.certificate-chain=The certificate chain associated with the alias.

elytron.key-store.alias.certificate.type=The type of the certificate.
elytron.key-store.alias.certificate.public-key=The public key associated with the certificate.
elytron.key-store.alias.certificate.finger-prints=The finger prints for the certificate.
elytron.key-store.alias.certificate.algorithm=The algorithm of the public key or finger print.
elytron.key-store.alias.certificate.format=The format of the public key.
elytron.key-store.alias.certificate.encoded=The encoded value of the public key or certificate.
elytron.key-store.alias.certificate.value=The value of the finger print.
elytron.key-store.alias.certificate.subject=The subject from the certificate.
elytron.key-store.alias.certificate.issuer=The issuer of the certificate.
elytron.key-store.alias.certificate.not-after=The expiration date and time of the certificate.
elytron.key-store.alias.certificate.not-before=The starting date and time the certificate is valid.
elytron.key-store.alias.certificate.serial-number=The serial number of the certificate.
elytron.key-store.alias.certificate.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.key-store.alias.certificate.signature=The signature of the certificate.
elytron.key-store.alias.certificate.version=The certificate version.

elytron.key-store.alias.certificate-chain.type=The type of the certificate.
elytron.key-store.alias.certificate-chain.public-key=The public key associated with the certificate.
elytron.key-store.alias.certificate-chain.finger-prints=The finger prints for the certificate.
elytron.key-store.alias.certificate-chain.algorithm=The algorithm of the public key or finger print.
elytron.key-store.alias.certificate-chain.format=The format of the public key.
elytron.key-store.alias.certificate-chain.encoded=The encoded value of the public key or certificate.
elytron.key-store.alias.certificate-chain.value=The value of the finger print.
elytron.key-store.alias.certificate-chain.subject=The subject from the certificate.
elytron.key-store.alias.certificate-chain.issuer=The issuer of the certificate.
elytron.key-store.alias.certificate-chain.not-after=The expiration date and time of the certificate.
elytron.key-store.alias.certificate-chain.not-before=The starting date and time the certificate is valid.
elytron.key-store.alias.certificate-chain.serial-number=The serial number of the certificate.
elytron.key-store.alias.certificate-chain.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.key-store.alias.certificate-chain.signature=The signature of the certificate.
elytron.key-store.alias.certificate-chain.version=The certificate version.

elytron.key-managers=A key manager definition for creating the KeyManager[] as used to create an SSLContext.
#operations
elytron.key-managers.add=Add the new key manager definition
elytron.key-managers.remove=Remove the key manager definition.
# Attributes
elytron.key-managers.algorithm=The name of the algorithm to use to create the underlying KeyManagerFactory.
elytron.key-managers.provider-loader=Reference to obtain the Provider[] to use when creating the underlying KeyManagerFactory.
elytron.key-managers.key-store=Reference to the KeyStore to use to initialise the underlying KeyManagerFactory.
elytron.key-managers.password=The password to use when initialising the underlying KeyManagerFactory.
elytron.key-managers.password.deprecated=Will be updated to use proper CredentialStore references.

elytron.trust-managers=A key manager definition for creating the TrustManager[] as used to create an SSLContext.
#operations
elytron.trust-managers.add=Add the new trust manager definition
elytron.trust-managers.remove=Remove the trust manager definition.
# Attributes
elytron.trust-managers.algorithm=The name of the algorithm to use to create the underlying TrustManagerFactory.
elytron.trust-managers.provider-loader=Reference to obtain the Provider[] to use when creating the underlying TrustManagerFactory.
elytron.trust-managers.key-store=Reference to the KeyStore to use to initialise the underlying TrustManagerFactory.

elytron.server-ssl-context=An SSLContext for use on the server side of a connection.
# operations
elytron.server-ssl-context.add=Add the SSLContext definition.
elytron.server-ssl-context.remove=Remove the SSLContext definition.
#Attributes
elytron.server-ssl-context.security-domain=The security domain to use for authentication during SSL session establishment.
elytron.server-ssl-context.cipher-suite-filter=The filter to apply to specify the enabled cipher suites.
elytron.server-ssl-context.protocols=The enabled protocols.
elytron.server-ssl-context.want-client-auth=Set wantClientAuth on the underlying SSLContext - if a security domain is referenced this will automatically be set to true.
elytron.server-ssl-context.need-client-auth=Set needClientAuth on the underlying SSLContext.
elytron.server-ssl-context.authentication-optional=Allow for a SSLSession to still be established even if the authentication failed, this allows a fall through to use other authentication mechanisms.
elytron.server-ssl-context.maximum-session-cache-size=The maximum number of SSL sessions to be cached.
elytron.server-ssl-context.session-timeout=The timeout for SSL sessions.
elytron.server-ssl-context.key-managers=Reference to the key managers to use within the SSLContext.
elytron.server-ssl-context.trust-managers=Reference to the trust managers to use within the SSLContext.
elytron.server-ssl-context.provider-loader=Reference to the Provider[] to use to load the SSLContext.
# Runtime Attributes
elytron.server-ssl-context.active-session-count=The count of current active sessions.

elytron.server-ssl-context.ssl-session=A currently established SSL session.
elytron.server-ssl-context.ssl-session.application-buffer-size=The application buffer size as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.cipher-suite=The selected cipher suite as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.creation-time=The creation time as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.last-accessed-time=The last accessed time as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.local-principal=The local principal as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.packet-buffer-size=The packet buffer size as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.peer-host=The peer host as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.peer-port=The peer port as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.peer-principal=The peer principal as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.protocol=The protocol as reported by the SSLSession.
elytron.server-ssl-context.ssl-session.valid=The validity of the session as reported by the SSLSession.

elytron.server-ssl-context.ssl-session.local-certificates=The local certificates from the SSLSession.
elytron.server-ssl-context.ssl-session.local-certificates.type=The type of the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.public-key=The public key associated with the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.finger-prints=The finger prints for the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.algorithm=The algorithm of the public key or finger print.
elytron.server-ssl-context.ssl-session.local-certificates.format=The format of the public key.
elytron.server-ssl-context.ssl-session.local-certificates.encoded=The encoded value of the public key or certificate.
elytron.server-ssl-context.ssl-session.local-certificates.value=The value of the finger print.
elytron.server-ssl-context.ssl-session.local-certificates.subject=The subject from the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.issuer=The issuer of the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.not-after=The expiration date and time of the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.not-before=The starting date and time the certificate is valid.
elytron.server-ssl-context.ssl-session.local-certificates.serial-number=The serial number of the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.server-ssl-context.ssl-session.local-certificates.signature=The signature of the certificate.
elytron.server-ssl-context.ssl-session.local-certificates.version=The certificate version.

elytron.server-ssl-context.ssl-session.peer-certificates=The local certificates from the SSLSession.
elytron.server-ssl-context.ssl-session.peer-certificates.type=The type of the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.public-key=The public key associated with the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.finger-prints=The finger prints for the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.algorithm=The algorithm of the public key or finger print.
elytron.server-ssl-context.ssl-session.peer-certificates.format=The format of the public key.
elytron.server-ssl-context.ssl-session.peer-certificates.encoded=The encoded value of the public key or certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.value=The value of the finger print.
elytron.server-ssl-context.ssl-session.peer-certificates.subject=The subject from the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.issuer=The issuer of the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.not-after=The expiration date and time of the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.not-before=The starting date and time the certificate is valid.
elytron.server-ssl-context.ssl-session.peer-certificates.serial-number=The serial number of the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron.server-ssl-context.ssl-session.peer-certificates.signature=The signature of the certificate.
elytron.server-ssl-context.ssl-session.peer-certificates.version=The certificate version.
# Operations
elytron.server-ssl-context.ssl-session.invalidate=Invalidate the SSLSession (Note: This does not terminate current connections, only prevents future connections from joining or resuming this session).


